application: fdolpenny [
  documentation: "Penny algorithm Dollo or polymorphism"
  groups: "Phylogeny:Discrete characters"
]

infile: datafile  [
  parameter: "Y"
  information: "data file"
  knowntype: "dolpenny input"
]

outfile: outfile  [
  parameter: "Y"
  knowntype: "dolpenny output"
]

boolean: dollo  [
  parameter: "Y"
  default: "Y"
  information: "Dollo Parsimony method (else Polymorphis)"
]

integer: numgroups  [
  additional: "Y"
  information: "How many groups of 100 trees"
  default: "1000"
]

integer: howoften  [
  additional: "Y"
  information: "How often to report, in trees"
  default: "100"
]

boolean: simple  [
  additional: "Y"
  information: "Branch and bound is simple"
]

boolean: thresh  [
  default: "N"
  information: "Use Threshold parsimony"
]

float: valthresh  [
  standard: "$(thresh)"
  minimum: "1.0"
  default: "1.0"
  information: "threshold value"
]

boolean: ancest  [
  additional: "Y"
  default: "N"
  information: "Use ancestral states in input file"
]

boolean: multsets  [
  additional: "Y"
  default: "N"
  information: "Analyze multiple data sets"
]

integer: datasets  [
  standard: "$(multsets)"
  minimum: "2"
  default: "2"
  information: "number of sets"
]

boolean: printdata  [
  additional: "Y"
  default: "N"
  information: "Print out the data at start of run"
]

boolean: progress  [
  additional: "Y"
  default: "N"
  information: "Print indications of progress of run"
]

boolean: steps  [
  additional: "Y"
  default: "N"
  information: "Print out steps in each site"
]

boolean: statesatnodes  [
  additional: "Y"
  default: "N"
  information: "Print states at all nodes of tree"
]

boolean: drawtree  [
  additional: "Y"
  default: "Y"
  information: "Draw tree"
]

boolean: trout  [
  parameter: "Y"
  default: "Y"
  information: "Create a tree file"
]

outfile: treefile  [
  standard: "$(trout)"
  extension: "treefile"
  information: "Tree file name"
  knowntype: "Newick tree"
]
