<table border cellspacing=0 cellpadding=3 bgcolor="#ccccff">
<tr bgcolor="#FFFFCC">
<th align="left">Qualifier</th>
<th align="left">Type</th>
<th align="left">Description</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Standard (Mandatory) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-asequence]<br>(Parameter 1)</td>
<td>sequence</td>
<td>Nucleotide sequence filename and optional format, or reference (input USA)</td>
<td>Readable sequence</td>
<td><b>Required</b></td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-bsequence]<br>(Parameter 2)</td>
<td>seqall</td>
<td>Genomic sequence</td>
<td>Readable sequence(s)</td>
<td><b>Required</b></td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-outfile]<br>(Parameter 3)</td>
<td>outfile</td>
<td>Sim4 program output file</td>
<td>Output file</td>
<td><i>&lt;*&gt;</i>.esim4</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Additional (Optional) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>-word</td>
<td>integer</td>
<td>Sets the word size (W) for blast hits. Default value: 12.</td>
<td>Any integer value</td>
<td>12</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-extend</td>
<td>integer</td>
<td>Sets the word extension termination limit (X) for the blast-like stage of the algorithm. Default value: 12.</td>
<td>Any integer value</td>
<td>12</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-cutoff</td>
<td>integer</td>
<td>Sets the cutoff (E) in range [3,10].</td>
<td>Integer up to 10</td>
<td>3</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-useramsp</td>
<td>toggle</td>
<td>False: esim4 calculates mspA, True: value from mspA command line argument.</td>
<td>Toggle value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-amsp</td>
<td>integer</td>
<td>MSP score threshold (K) for the first stage of the algorithm. (If this option is not specified, the threshold is computed from the lengths of the sequences, using statistical criteria.) For example, a good value for genomic sequences in the range of a few hundred Kb is 16. To avoid spurious matches, however, a larger value may be needed for longer sequences.</td>
<td>Any integer value</td>
<td>16</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-userbmsp</td>
<td>toggle</td>
<td>False: esim4 calculates mspB, True: value from mspB command line argument.</td>
<td>Toggle value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-bmsp</td>
<td>integer</td>
<td>Sets the threshold for the MSP scores (C) when aligning the as-yet-unmatched fragments, during the second stage of the algorithm. By default, the smaller of the constant 12 and a statistics-based threshold is chosen.</td>
<td>Any integer value</td>
<td>12</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-weight</td>
<td>integer</td>
<td>Weight value (H) (undocumented). 0 uses a default, &gt;0 is a value</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-diagonal</td>
<td>integer</td>
<td>Bound (K) for the diagonal distance within consecutive MSPs in an exon.</td>
<td>Any integer value</td>
<td>10</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-strand</td>
<td>list</td>
<td>This determines the strand of the genome (R) with which the mRNA will be aligned. The default value is 'both', in which case both strands of the genome are attempted. The other allowed modes are 'forward' and 'reverse'.</td>
<td><table><tr><td>both</td> <td><i>(Both strands)</i></td></tr><tr><td>forward</td> <td><i>(Forward strand only)</i></td></tr><tr><td>reverse</td> <td><i>(Reverse strand only)</i></td></tr></table></td>
<td>both</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-format</td>
<td>integer</td>
<td>Sets the output format (A). Exon endpoints only (format=0), exon endpoints and boundaries of the coding region (CDS) in the genomic sequence, when specified for the input mRNA (-format=5), alignment text (-format=1), alignment in lav-block format (-format=2), or both exon endpoints and alignment text (-format=3 or -format=4). If a reverse complement match is found, -format=0,1,2,3,5 will give its position in the plus strand of the longer sequence and the minus strand of the shorter sequence. -format=4 will give its position in the plus strand of the first sequence (mRNA) and the minus strand of the second sequence (genome), regardless of which sequence is longer. The -format=5 option can be used with the S command line option to specify the endpoints of the CDS in the mRNA, and produces output in the exons file format required by PipMaker.</td>
<td>Integer from 0 to 5</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-cliptails</td>
<td>boolean</td>
<td>Trim poly-A tails (P). Specifies whether or not the program should report the fragment of the alignment containing the poly-A tail (if found). By default (-nocliptails) the alignment is displayed as computed. When this feature is enabled (-cliptails), sim4 will remove the poly-A tails and all format options will produce additional lav alignment headers.</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-smallexons</td>
<td>boolean</td>
<td>Requests an additional search for small marginal exons (N) (N=1) guided by the splice-site recognition signals. This option can be used when a high accuracy match is expected. The default value is N=0, specifying no additional search.</td>
<td>Boolean value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-[no]ambiguity</td>
<td>boolean</td>
<td>Controls the set of characters allowed in the input sequences (B). By default (-ambiguity), ambiguity characters (ABCDGHKMNRSTVWXY) are allowed. By specifying -noambiguity, the set of acceptable characters is restricted to A,C,G,T,N and X only.</td>
<td>Boolean value Yes/No</td>
<td>Yes</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-cdsregion</td>
<td>string</td>
<td>Allows the user to specify the endpoints of the CDS in the input mRNA (S), with the syntax: -cdsregion=n1..n2. This option is only available with the -format=5 flag, which produces output in the format required by PipMaker. Alternatively, the CDS coordinates could appear in a construct CDS=n1..n2 in the FastA header of the mRNA sequence. When the second file is an mRNA database, the command line specification for the CDS will apply to the first sequence in the file only.</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-aoffset</td>
<td>integer</td>
<td>Undocumented (f) - some sort of offset in first sequence.</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-boffset</td>
<td>integer</td>
<td>Undocumented (F) - some sort of offset in second sequence.</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-toa</td>
<td>integer</td>
<td>Undocumented (t)- offset end of first sequence?</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-tob</td>
<td>integer</td>
<td>Undocumented (T) - offset end of second sequence?</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Advanced (Unprompted) qualifiers</th>
</tr>

<tr>
<td colspan=5>(none)</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Associated qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-asequence" associated sequence qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sbegin1<br>-sbegin_asequence</td>
<td>integer</td>
<td>Start of the sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -send1<br>-send_asequence</td>
<td>integer</td>
<td>End of the sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sreverse1<br>-sreverse_asequence</td>
<td>boolean</td>
<td>Reverse (if DNA)</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sask1<br>-sask_asequence</td>
<td>boolean</td>
<td>Ask for begin/end/reverse</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -snucleotide1<br>-snucleotide_asequence</td>
<td>boolean</td>
<td>Sequence is nucleotide</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sprotein1<br>-sprotein_asequence</td>
<td>boolean</td>
<td>Sequence is protein</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -slower1<br>-slower_asequence</td>
<td>boolean</td>
<td>Make lower case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -supper1<br>-supper_asequence</td>
<td>boolean</td>
<td>Make upper case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sformat1<br>-sformat_asequence</td>
<td>string</td>
<td>Input sequence format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sdbname1<br>-sdbname_asequence</td>
<td>string</td>
<td>Database name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sid1<br>-sid_asequence</td>
<td>string</td>
<td>Entryname</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -ufo1<br>-ufo_asequence</td>
<td>string</td>
<td>UFO features</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fformat1<br>-fformat_asequence</td>
<td>string</td>
<td>Features format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fopenfile1<br>-fopenfile_asequence</td>
<td>string</td>
<td>Features file name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-bsequence" associated seqall qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sbegin2<br>-sbegin_bsequence</td>
<td>integer</td>
<td>Start of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -send2<br>-send_bsequence</td>
<td>integer</td>
<td>End of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sreverse2<br>-sreverse_bsequence</td>
<td>boolean</td>
<td>Reverse (if DNA)</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sask2<br>-sask_bsequence</td>
<td>boolean</td>
<td>Ask for begin/end/reverse</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -snucleotide2<br>-snucleotide_bsequence</td>
<td>boolean</td>
<td>Sequence is nucleotide</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sprotein2<br>-sprotein_bsequence</td>
<td>boolean</td>
<td>Sequence is protein</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -slower2<br>-slower_bsequence</td>
<td>boolean</td>
<td>Make lower case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -supper2<br>-supper_bsequence</td>
<td>boolean</td>
<td>Make upper case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sformat2<br>-sformat_bsequence</td>
<td>string</td>
<td>Input sequence format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sdbname2<br>-sdbname_bsequence</td>
<td>string</td>
<td>Database name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sid2<br>-sid_bsequence</td>
<td>string</td>
<td>Entryname</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -ufo2<br>-ufo_bsequence</td>
<td>string</td>
<td>UFO features</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fformat2<br>-fformat_bsequence</td>
<td>string</td>
<td>Features format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fopenfile2<br>-fopenfile_bsequence</td>
<td>string</td>
<td>Features file name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-outfile" associated outfile qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -odirectory3<br>-odirectory_outfile</td>
<td>string</td>
<td>Output directory</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>General qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td> -auto</td>
<td>boolean</td>
<td>Turn off prompts</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -stdout</td>
<td>boolean</td>
<td>Write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -filter</td>
<td>boolean</td>
<td>Read first file from standard input, write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -options</td>
<td>boolean</td>
<td>Prompt for standard and additional values</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -debug</td>
<td>boolean</td>
<td>Write debug output to program.dbg</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -verbose</td>
<td>boolean</td>
<td>Report some/full command line options</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -help</td>
<td>boolean</td>
<td>Report command line options and exit. More information on associated and general qualifiers can be found with -help -verbose</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -warning</td>
<td>boolean</td>
<td>Report warnings</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -error</td>
<td>boolean</td>
<td>Report errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fatal</td>
<td>boolean</td>
<td>Report fatal errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -die</td>
<td>boolean</td>
<td>Report dying program messages</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -version</td>
<td>boolean</td>
<td>Report version number and exit</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

</table>
