
                              vrnacofoldconc 



Function

   RNA cofolding with concentrations

Description

   **************** EDIT HERE ****************

Algorithm

   **************** EDIT HERE ****************

Usage

   Here is a sample session with vrnacofoldconc


% vrnacofoldconc 
RNA cofolding with concentrations
Input nucleotide sequence: cofold-red.fasta
Second nucleotide sequence: cofold-blue.fasta
Vienna RNA concentration data file: cofold-conc.dat
Vienna RNAfold output file [red.vrnacofoldconc]: 

   Go to the input files for this example
   Go to the output files for this example

Command line arguments

   Standard (Mandatory) qualifiers:
  [-asequence]         sequence   Nucleotide sequence filename and optional
                                  format, or reference (input USA)
  [-bsequence]         sequence   Nucleotide sequence filename and optional
                                  format, or reference (input USA)
  [-concentrationfile] infile     Vienna RNA concentration data file
  [-outfile]           outfile    [*.vrnacofoldconc] Vienna RNAfold output
                                  file

   Additional (Optional) qualifiers: (none)
   Advanced (Unprompted) qualifiers:
   -aconstraintfile    infile     Vienna RNA structure contraints file
                                  (optional)
   -bconstraintfile    infile     Second vienna RNA structure contraints file
                                  (optional)
   -paramfile          infile     Vienna RNA parameters file (optional)
   -temperature        float      [37.0] Temperature (Any numeric value)
   -[no]gu             boolean    [Y] Allow GU pairs
   -[no]closegu        boolean    [Y] Allow GU pairs at end of helices
   -[no]lp             boolean    [Y] Allow lonely pairs
   -[no]convert        boolean    [Y] Convert T to U
   -nsbases            string     Non-standard bases (Any string is accepted)
   -[no]tetraloop      boolean    [Y] Stabilizing energies for tetra-loops
   -energy             menu       [0] Rarely used option to fold sequences
                                  from the ABCD... alphabet (Values: 0 (BP); 1
                                  (Any with GC); 2 (Any with AU parameters))
   -scale              float      [1.07] Estimate of ensemble free energy (Any
                                  numeric value)
   -dangles            menu       [1] Method (Values: 0 (Ignore); 1 (Only
                                  unpaired bases for just one dangling end); 2
                                  (Always use dangling energies); 3 (Allow
                                  coaxial stacking of adjacent helices))
   -paired             boolean    [N] Calculate probabilities of base pairing
   -ssoutfile          outfile    Output file name
   -aoutfile           outfile    First (a) vienna dotplot output file
   -aaoutfile          outfile    Second (a-a) vienna dotplot output file
   -boutfile           outfile    Third (b) vienna dotplot output file
   -bboutfile          outfile    Fourth (b-b) vienna dotplot output file
   -aboutfile          outfile    Fifth (a-b) vienna dotplot output file

   Associated qualifiers:

   "-asequence" associated qualifiers
   -sbegin1            integer    Start of the sequence to be used
   -send1              integer    End of the sequence to be used
   -sreverse1          boolean    Reverse (if DNA)
   -sask1              boolean    Ask for begin/end/reverse
   -snucleotide1       boolean    Sequence is nucleotide
   -sprotein1          boolean    Sequence is protein
   -slower1            boolean    Make lower case
   -supper1            boolean    Make upper case
   -sformat1           string     Input sequence format
   -sdbname1           string     Database name
   -sid1               string     Entryname
   -ufo1               string     UFO features
   -fformat1           string     Features format
   -fopenfile1         string     Features file name

   "-bsequence" associated qualifiers
   -sbegin2            integer    Start of the sequence to be used
   -send2              integer    End of the sequence to be used
   -sreverse2          boolean    Reverse (if DNA)
   -sask2              boolean    Ask for begin/end/reverse
   -snucleotide2       boolean    Sequence is nucleotide
   -sprotein2          boolean    Sequence is protein
   -slower2            boolean    Make lower case
   -supper2            boolean    Make upper case
   -sformat2           string     Input sequence format
   -sdbname2           string     Database name
   -sid2               string     Entryname
   -ufo2               string     UFO features
   -fformat2           string     Features format
   -fopenfile2         string     Features file name

   "-outfile" associated qualifiers
   -odirectory4        string     Output directory

   "-ssoutfile" associated qualifiers
   -odirectory         string     Output directory

   "-aoutfile" associated qualifiers
   -odirectory         string     Output directory

   "-aaoutfile" associated qualifiers
   -odirectory         string     Output directory

   "-boutfile" associated qualifiers
   -odirectory         string     Output directory

   "-bboutfile" associated qualifiers
   -odirectory         string     Output directory

   "-aboutfile" associated qualifiers
   -odirectory         string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write standard output
   -filter             boolean    Read standard input, write standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages

Input file format

   vrnacofoldconc reads any normal sequence USAs.

  Input files for usage example

  File: cofold-red.fasta

>red
AUGAAGAUGA

  File: cofold-blue.fasta

>blue
CUGUCUGUCUUGAGACA

  File: cofold-conc.dat

10
10

Output file format

   vrnacofoldconc outputs a graph to the specified graphics device.
   outputs a report format file. The default format is ...

  Output files for usage example

  File: red.vrnacofoldconc

AUGAAGAUGA&CUGUCUGUCUUGAGACA
....((((..&..))))(((....))). ( -4.40)
Expinit2 = 0.513986
tab = -1.738299 taa = 4.679345  tbb = -12.558919

Free Energies:
    AB          AA              BB              A               B
-5.884889       -0.208509       -16.658920      -0.003662       -4.266495

Initial concentrations          Equilibrium concentrations
A                B                      AB               AA              BB
         A               B
10.000000       0.000000                0.000000        4.053814        0.00000
0       1.892373        0.000000 f
10.000000       0.000000                0.000000        0.405381        0.00000
0       0.189237        0.000000 f
10.000000       0.000000                0.000000        4.053814        0.00000
0       1.892373        0.000000 f
10.000000       0.000000                0.000000        0.405381        0.00000
0       0.189237        0.000000 f
....((((,...)))}(((....))). [ -5.88]
 frequency of mfe structure in ensemble 0.279849

  File: red.ssps

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ePS_dot.c,v 1.1 2005/10/13 13:00:44 ajb Exp $, ViennaRNA-1.6
%%CreationDate: Wed Jul 12 15:22:36 2006
%%Title: Rna secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options:
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  outlinecolor
  newpath
  coor 0 get aload pop 0.8 0 360 arc
  coor {aload pop lineto} forall
  stroke
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add


  [Part of this file has been deleted for brevity]

AUGAAGAUGACUGUCUGUCUUGAGACA\
) def
/coor [
[96.276 111.415]
[91.331 110.049]
[86.992 106.486]
[84.234 101.044]
[83.858 94.465]
[73.252 83.858]
[62.645 73.252]
[52.039 62.645]
[36.067 58.926]
[31.562 43.157]
[43.157 31.562]
[58.926 36.067]
[62.645 52.039]
[73.252 62.645]
[83.858 73.252]
[94.465 83.858]
[107.979 90.367]
[122.885 92.046]
[137.791 93.726]
[152.597 86.675]
[165.951 96.194]
[164.115 112.490]
[148.978 118.799]
[136.111 108.631]
[121.206 106.952]
[106.300 105.272]
[104.357 108.419]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[8 13]
[17 26]
[18 25]
[19 24]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

  File: red.aps

%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA DotPlot
%%Creator: ePS_dot.c,v 1.1 2005/10/13 13:00:44 ajb Exp $, ViennaRNA-1.6
%%CreationDate: Wed Jul 12 15:22:36 2006
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2
%
%FreeEnergy= -0.003661585

%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul add            % x += 0.5
   exch 2 index 0.5 mul add exch  % x += 0.5
   newpath
   moveto
   dup neg   0 rlineto
   dup neg   0 exch rlineto
             0 rlineto
   closepath
   fill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]


  [Part of this file has been deleted for brevity]

     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  0.5 neg dup translate
} bind def

end
%%EndProlog
DPdict begin
%delete next line to get rid of title
270 665 moveto /Helvetica findfont 14 scalefont setfont (red.aps) show

/sequence { (\
AUGAAGAUGA\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
0.5 dup translate
% draw diagonal
0.04 setlinewidth
0 len moveto len 0 lineto stroke

drawgrid
%data starts here
1 8 0.056921184 ubox
2 6 0.010665222 ubox
2 7 0.059657315 ubox
2 9 0.037641368 ubox
2 10 0.014667470 ubox
3 8 0.016991073 ubox
4 8 0.013136244 ubox
showpage
end
%%EOF

  File: red.aaps

%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA DotPlot
%%Creator: ePS_dot.c,v 1.1 2005/10/13 13:00:44 ajb Exp $, ViennaRNA-1.6
%%CreationDate: Wed Jul 12 15:22:36 2006
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2
%
%FreeEnergy= -0.208508983

%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul add            % x += 0.5
   exch 2 index 0.5 mul add exch  % x += 0.5
   newpath
   moveto
   dup neg   0 rlineto
   dup neg   0 exch rlineto
             0 rlineto
   closepath
   fill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]


  [Part of this file has been deleted for brevity]

0 len moveto len 0 lineto stroke

drawgrid
%data starts here
1 8 nan ubox
1 12 0.407831799 ubox
1 18 0.546335663 ubox
2 6 0.012910178 ubox
2 7 0.012773380 ubox
2 9 nan ubox
2 11 0.407831799 ubox
2 13 0.335096015 ubox
2 14 0.495435278 ubox
2 15 0.329519420 ubox
2 16 0.307465785 ubox
2 17 0.571406921 ubox
2 19 0.338549088 ubox
2 20 0.262470929 ubox
3 8 0.013692171 ubox
3 12 0.335096015 ubox
3 18 0.336299047 ubox
4 8 0.012403691 ubox
4 12 0.495435278 ubox
4 18 0.361298493 ubox
5 12 0.329519420 ubox
5 18 0.335687944 ubox
6 12 0.307465785 ubox
6 18 0.278217484 ubox
7 12 0.571406921 ubox
7 18 0.745965997 ubox
8 11 0.546335663 ubox
8 13 0.336299047 ubox
8 14 0.361298493 ubox
8 15 0.335687944 ubox
8 16 0.278217484 ubox
8 17 0.745965997 ubox
8 19 0.333927239 ubox
8 20 0.186733437 ubox
9 12 0.338549088 ubox
9 18 0.333927239 ubox
10 12 0.262470929 ubox
10 18 0.186733437 ubox
11 18 nan ubox
12 16 0.012910178 ubox
12 17 0.012773380 ubox
12 19 nan ubox
13 18 0.010583252 ubox
14 18 0.010427900 ubox
showpage
end
%%EOF

  File: red.abps

%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA DotPlot
%%Creator: ePS_dot.c,v 1.1 2005/10/13 13:00:44 ajb Exp $, ViennaRNA-1.6
%%CreationDate: Wed Jul 12 15:22:36 2006
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2
%
%FreeEnergy= -5.884888649

%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul add            % x += 0.5
   exch 2 index 0.5 mul add exch  % x += 0.5
   newpath
   moveto
   dup neg   0 rlineto
   dup neg   0 exch rlineto
             0 rlineto
   closepath
   fill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]


  [Part of this file has been deleted for brevity]

6 26 0.010568585 ubox
7 12 0.022464919 ubox
7 14 0.888581257 ubox
7 16 0.008014762 ubox
7 18 0.469788688 ubox
7 20 0.003434528 ubox
8 13 0.864846377 ubox
8 17 0.459064168 ubox
8 27 0.014069947 ubox
9 11 0.185631592 ubox
9 12 0.526055295 ubox
9 14 0.017371849 ubox
9 15 0.211168745 ubox
9 16 0.255225452 ubox
9 19 0.006477108 ubox
9 26 0.013490881 ubox
10 12 0.037689419 ubox
10 14 0.191228823 ubox
10 16 0.017643945 ubox
10 18 0.005857187 ubox
11 17 0.008887992 ubox
12 25 0.006033087 ubox
12 27 nan ubox
13 26 nan ubox
14 23 0.010075980 ubox
14 25 nan ubox
15 22 0.010247965 ubox
15 24 nan ubox
16 22 nan ubox
16 23 nan ubox
16 27 0.305588746 ubox
17 21 nan ubox
17 26 0.882047609 ubox
18 22 nan ubox
18 23 0.005436960 ubox
18 24 0.003329870 ubox
18 25 0.882815707 ubox
19 24 0.877600892 ubox
20 25 0.003423158 ubox
21 27 0.009348769 ubox
22 26 0.015430131 ubox
17 26 0.949999988 lbox
18 25 0.949999988 lbox
19 24 0.949999988 lbox
5 16 0.949999988 lbox
6 15 0.949999988 lbox
7 14 0.949999988 lbox
8 13 0.949999988 lbox
showpage
end
%%EOF

  File: red.bps

%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA DotPlot
%%Creator: ePS_dot.c,v 1.1 2005/10/13 13:00:44 ajb Exp $, ViennaRNA-1.6
%%CreationDate: Wed Jul 12 15:22:36 2006
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2
%
%FreeEnergy= -4.266494751

%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul add            % x += 0.5
   exch 2 index 0.5 mul add exch  % x += 0.5
   newpath
   moveto
   dup neg   0 rlineto
   dup neg   0 exch rlineto
             0 rlineto
   closepath
   fill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]


  [Part of this file has been deleted for brevity]

} bind def

end
%%EndProlog
DPdict begin
%delete next line to get rid of title
270 665 moveto /Helvetica findfont 14 scalefont setfont (red.bps) show

/sequence { (\
CUGUCUGUCUUGAGACA\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
0.5 dup translate
% draw diagonal
0.04 setlinewidth
0 len moveto len 0 lineto stroke

drawgrid
%data starts here
1 14 0.005240367 ubox
2 13 0.004453976 ubox
2 15 0.020976246 ubox
2 17 0.670298457 ubox
3 9 0.003276457 ubox
3 16 0.947914389 ubox
4 13 0.030267916 ubox
4 15 0.948345709 ubox
5 12 0.031100569 ubox
5 14 0.948406578 ubox
6 12 0.036122707 ubox
6 13 0.895017467 ubox
6 17 0.221479258 ubox
7 11 0.028943407 ubox
7 16 0.313227070 ubox
8 12 0.034859252 ubox
8 13 0.014451769 ubox
8 15 0.313262201 ubox
9 14 0.311389763 ubox
3 16 0.949999988 lbox
4 15 0.949999988 lbox
5 14 0.949999988 lbox
6 13 0.949999988 lbox
showpage
end
%%EOF

  File: red.bbps

%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA DotPlot
%%Creator: ePS_dot.c,v 1.1 2005/10/13 13:00:44 ajb Exp $, ViennaRNA-1.6
%%CreationDate: Wed Jul 12 15:22:36 2006
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2
%
%FreeEnergy= -16.658920288

%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul add            % x += 0.5
   exch 2 index 0.5 mul add exch  % x += 0.5
   newpath
   moveto
   dup neg   0 rlineto
   dup neg   0 exch rlineto
             0 rlineto
   closepath
   fill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]


  [Part of this file has been deleted for brevity]

/cutpoint 18 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
0.5 dup translate
% draw diagonal
0.04 setlinewidth
0 len moveto len 0 lineto stroke

drawgrid
%data starts here
1 7 0.003236660 ubox
2 34 0.009973158 ubox
3 33 0.012492753 ubox
4 32 0.010908848 ubox
4 34 0.009627680 ubox
5 31 0.009623489 ubox
6 30 0.006572256 ubox
6 34 0.706536621 ubox
7 33 0.999220455 ubox
8 32 0.999725513 ubox
9 31 0.999931184 ubox
10 30 0.999844986 ubox
11 29 0.525401714 ubox
12 28 0.525401714 ubox
13 23 0.006572256 ubox
13 27 0.999844986 ubox
14 22 0.009623489 ubox
14 26 0.999931184 ubox
15 21 0.010908848 ubox
15 25 0.999725513 ubox
16 20 0.012492753 ubox
16 24 0.999220455 ubox
17 19 0.009973158 ubox
17 21 0.009627680 ubox
17 23 0.706536621 ubox
18 24 0.003236660 ubox
7 33 0.949999988 lbox
8 32 0.949999988 lbox
9 31 0.949999988 lbox
10 30 0.949999988 lbox
13 27 0.949999988 lbox
14 26 0.949999988 lbox
15 25 0.949999988 lbox
16 24 0.949999988 lbox
showpage
end
%%EOF

Data files

   **************** EDIT HERE ****************

Notes

   None.

References

   None.

Warnings

   None.

Diagnostic Error Messages

   None.

Exit status

   It always exits with status 0.

Known bugs

   None.

See also

   Program name                       Description
   vrnaalifold   RNA alignment folding
   vrnaalifoldpf RNA alignment folding with partition
   vrnacofold    RNA cofolding
   vrnacofoldpf  RNA cofolding with partitioning
   vrnadistance  RNA distances
   vrnaduplex    RNA duplex calculation
   vrnaeval      RNA eval
   vrnaevalpair  RNA eval with cofold
   vrnafold      Calculate secondary structures of RNAs
   vrnafoldpf    Secondary structures of RNAs with partition
   vrnaheat      RNA melting
   vrnainverse   RNA sequences matching a structure
   vrnalfold     Calculate locally stable secondary structures of RNAs
   vrnaplot      Plot vrnafold output
   vrnasubopt    Calculate RNA suboptimals

Author(s)

   This program is an EMBOSS conversion of a program written by Ivo
   Hofacker as part of his VIENNA package.

   Although we take every care to ensure that the results of the EMBOSS
   version are identical to those from the original package, we recommend
   that you check your inputs give the same results in both versions
   before publication.

   Please report all bugs in the EMBOSS version to the EMBOSS bug team,
   not to the original author.

History

   Converted (October 2005) by Alan Bleasby

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.

Comments
