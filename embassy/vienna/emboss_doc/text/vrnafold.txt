
                                 vrnafold 



Function

   Calculate secondary structures of RNAs

Description

   This is a port of the Vienna RNA package program RNAfold.

   The original program has additional inputs and produces different
   outputs, depending on the options selected. In the EMBASSY
   implementation it is split into vrnafold for a single sequence and
   vrnafoldpair for a pair of sequences

Algorithm

   See the original documentation for the Vienna RNA package
   http://www.tbi.univie.ac.at/~ivo/RNA/

Usage

   Here is a sample session with vrnafold


% vrnafold -constraintfile rna1.fold 
Calculate secondary structures of RNAs
Input nucleotide sequence: rna1.seq
Vienna RNAfold output file [rna1.vrnafold]: 

   Go to the input files for this example
   Go to the output files for this example

   Example 2


% vrnafold 
Calculate secondary structures of RNAs
Input nucleotide sequence: rna1.seq
Vienna RNAfold output file [rna1.vrnafold]: 

   Go to the output files for this example

Command line arguments

   Standard (Mandatory) qualifiers:
  [-sequence]          sequence   Nucleotide sequence filename and optional
                                  format, or reference (input USA)
  [-outfile]           outfile    [*.vrnafold] Vienna RNAfold output file

   Additional (Optional) qualifiers: (none)
   Advanced (Unprompted) qualifiers:
   -constraintfile     infile     Vienna RNA structure constraints file
                                  (optional)
   -paramfile          infile     Vienna RNA parameters file (optional)
   -temperature        float      [37.0] Temperature (Any numeric value)
   -circular           boolean    [N] Allow circular RNA
   -[no]gu             boolean    [Y] Allow GU pairs
   -[no]closegu        boolean    [Y] Allow GU pairs at end of helices
   -[no]lp             boolean    [Y] Allow lonely pairs
   -[no]convert        boolean    [Y] Convert T to U
   -nsbases            string     Non-standard bases (Any string is accepted)
   -[no]tetraloop      boolean    [Y] Stabilizing energies for tetra-loops
   -energy             menu       [0] Rarely used option to fold sequences
                                  from the ABCD... alphabet (Values: 0 (BP); 1
                                  (Any with GC); 2 (Any with AU parameters))
   -scale              float      [1.07] Estimate of ensemble free energy (Any
                                  numeric value)
   -dangles            menu       [1] Method (Values: 0 (Ignore); 1 (Only
                                  unpaired bases for just one dangling end); 2
                                  (Always use dangling energies); 3 (Allow
                                  coaxial stacking of adjacent helices))
   -ssoutfile          outfile    [*.vrnafold] Vienna structure postscript
                                  output file

   Associated qualifiers:

   "-sequence" associated qualifiers
   -sbegin1            integer    Start of the sequence to be used
   -send1              integer    End of the sequence to be used
   -sreverse1          boolean    Reverse (if DNA)
   -sask1              boolean    Ask for begin/end/reverse
   -snucleotide1       boolean    Sequence is nucleotide
   -sprotein1          boolean    Sequence is protein
   -slower1            boolean    Make lower case
   -supper1            boolean    Make upper case
   -sformat1           string     Input sequence format
   -sdbname1           string     Database name
   -sid1               string     Entryname
   -ufo1               string     UFO features
   -fformat1           string     Features format
   -fopenfile1         string     Features file name

   "-outfile" associated qualifiers
   -odirectory2        string     Output directory

   "-ssoutfile" associated qualifiers
   -odirectory         string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write first file to standard output
   -filter             boolean    Read first file from standard input, write
                                  first file to standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages

Input file format

   vrnafold reads any normal sequence USAs.

  Input files for usage example

  File: rna1.fold

   .((.......<<..........||............))..

  File: rna1.seq

>rna1
CACUACUCCAAGGACCGUAUCUUUCUCAGUGCGACAGUAA

Output file format

   vrnafold outputs a graph to the specified graphics device. outputs a
   report format file. The default format is ...

  Output files for usage example

  File: rna1.ssps

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ePS_dot.c,v 1.4 2008/01/15 10:25:02 ajb Exp $, ViennaRNA-1.7
%%CreationDate: Sun Jul 15 12:00:00 2007
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -C
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint coor length cutpoint sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {


  [Part of this file has been deleted for brevity]

[60.390 48.049]
[52.724 35.155]
[37.593 29.824]
[32.464 14.623]
[41.271 1.213]
[57.259 -0.118]
[68.162 11.650]
[65.618 27.490]
[73.283 40.384]
[80.948 53.277]
[88.614 66.171]
[96.279 79.064]
[109.219 80.839]
[118.680 89.842]
[121.094 102.678]
[115.550 114.503]
[122.206 127.946]
[128.862 141.388]
[135.517 154.831]
[150.732 154.166]
[164.899 159.754]
[175.564 170.625]
[180.879 184.896]
[179.923 200.095]
[172.862 213.588]
[160.920 223.038]
[146.165 226.807]
[131.153 224.242]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[7 28]
[10 24]
[11 23]
[12 22]
[13 21]
[14 20]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

  File: rna1.vrnafold

CACUACUCCAAGGACCGUAUCUUUCUCAGUGCGACAGUAA
...((((..(((((.....)))))...))))......... ( -2.20)

  Output files for usage example 2

  File: rna1.ssps

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ePS_dot.c,v 1.4 2008/01/15 10:25:02 ajb Exp $, ViennaRNA-1.7
%%CreationDate: Sun Jul 15 12:00:00 2007
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options:
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint coor length cutpoint sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {


  [Part of this file has been deleted for brevity]

[76.515 91.594]
[88.932 77.646]
[107.552 76.227]
[116.182 63.958]
[124.812 51.689]
[133.442 39.420]
[142.071 27.151]
[136.924 12.513]
[141.395 -2.346]
[153.767 -11.712]
[169.282 -11.983]
[181.974 -3.056]
[186.962 11.637]
[182.330 26.446]
[169.857 35.678]
[154.340 35.781]
[145.711 48.050]
[137.081 60.319]
[128.451 72.587]
[119.821 84.856]
[124.925 99.035]
[120.932 113.567]
[109.299 123.146]
[110.447 138.102]
[111.596 153.058]
[121.300 166.278]
[114.456 181.181]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[7 14]
[8 13]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

  File: rna1.vrnafold

CACUACUCCAAGGACCGUAUCUUUCUCAGUGCGACAGUAA
.(((..((....)).(((((........)))))..))).. ( -3.50)

Data files

   For details of Vienna RNA file formats, see the original documentation
   http://www.tbi.univie.ac.at/~ivo/RNA/

Notes

   None.

References

   None.

Warnings

   None.

Diagnostic Error Messages

   None.

Exit status

   It always exits with status 0.

Known bugs

   None.

See also

    Program name                       Description
   einverted      Finds DNA inverted repeats
   vrnaalifold    RNA alignment folding
   vrnaalifoldpf  RNA alignment folding with partition
   vrnacofold     RNA cofolding
   vrnacofoldconc RNA cofolding with concentrations
   vrnacofoldpf   RNA cofolding with partitioning
   vrnadistance   RNA distances
   vrnaduplex     RNA duplex calculation
   vrnaeval       RNA eval
   vrnaevalpair   RNA eval with cofold
   vrnafoldpf     Secondary structures of RNAs with partition
   vrnaheat       RNA melting
   vrnainverse    RNA sequences matching a structure
   vrnalfold      Calculate locally stable secondary structures of RNAs
   vrnaplot       Plot vrnafold output
   vrnasubopt     Calculate RNA suboptimals

Author(s)

   This program is an EMBOSS conversion of a program written by Ivo
   Hofacker as part of his VIENNA package.

   Although we take every care to ensure that the results of the EMBOSS
   version are identical to those from the original package, we recommend
   that you check your inputs give the same results in both versions
   before publication.

   Please report all bugs in the EMBOSS version to the EMBOSS bug team,
   not to the original author.

History

   Converted (October 2005) by Alan Bleasby

Target users

   This program is intended to be used by everyone and everything, from
   naive users to embedded scripts.

Comments
