
                         ALLVERSUSALL documentation
                                      
   

CONTENTS

   1.0 SUMMARY 
   2.0 INPUTS & OUTPUTS 
   3.0 INPUT FILE FORMAT 
   4.0 OUTPUT FILE FORMAT 
   5.0 DATA FILES 
   6.0 USAGE 
   7.0 KNOWN BUGS & WARNINGS 
   8.0 NOTES 
   9.0 DESCRIPTION 
   10.0 ALGORITHM 
   11.0 RELATED APPLICATIONS 
   12.0 DIAGNOSTIC ERROR MESSAGES 
   13.0 AUTHORS 
   14.0 REFERENCES 

1.0 SUMMARY

   Sequence similarity data from all-versus-all comparison

2.0 INPUTS & OUTPUTS

   ALLVERSUSALL reads a directory of files each containing a set of 2 or
   more sequences, performs an all-versus-all global alignment on each
   set and writes a file of sequence similarity values for each input
   file. The output files have the same base name as the input files. The
   path and extension of the input and output files are specified by the
   user in the ACD file.

3.0 INPUT FILE FORMAT

   All common sequence format are supported.

4.0 OUTPUT FILE FORMAT

   The output file contains 7 columns as follows:
     * (1) Sequence number (sequential order in input file) of first
       sequence of a pair.
     * (2) Accesion number of first sequence of a pair.
     * (3) A ':' is always given.
     * (4) Sequence number of second sequence.
     * (5) Accesion number of second sequence.
     * (6) A ':' is always given.
     * (7) Sequence similarity value (2dp).

  Output files for usage example

  File: swtiny1.out

1 Q9WVI4 : 2 Q9ERL9 : 90.48
1 Q9WVI4 : 3 Q9DGG6 : 55.70
1 Q9WVI4 : 4 Q99396 : 54.74
1 Q9WVI4 : 5 Q99280 : 57.66
2 Q9ERL9 : 3 Q9DGG6 : 58.28
2 Q9ERL9 : 4 Q99396 : 56.39
2 Q9ERL9 : 5 Q99280 : 62.31
3 Q9DGG6 : 4 Q99396 : 52.26
3 Q9DGG6 : 5 Q99280 : 53.99
4 Q99396 : 5 Q99280 : 83.41

  File: swtiny2.out

1 O58452 : 2 O30129 : 82.42
1 O58452 : 3 O26938 : 75.56
2 O30129 : 3 O26938 : 71.43

  File: allversusall.log

//
/homes/user/test/data/structure/allversusall/swtiny1.fasta
//
/homes/user/test/data/structure/allversusall/swtiny2.fasta

5.0 DATA FILES

   ALLVERSUSALL uses a residue substitution matrix.

6.0 USAGE

  6.1 COMMAND LINE ARGUMENTS

Sequence similarity data from all-versus-all comparison.
Version: EMBOSS:6.1.0

   Standard (Mandatory) qualifiers:
  [-seqinpath]         dirlist    [./] Sequence directories
  [-datoutdir]         outdir     [./] This option specifies the location of
                                  sequence similarity data files (output).
   -logfile            outfile    [allversusall.log] This option specifies the
                                  name of ALLVERSUSALL log file (output). The
                                  log file contains messages about any errors
                                  arising while ALLVERSUSALL ran.

   Additional (Optional) qualifiers:
   -matrix             matrixf    [EBLOSUM62] This option specifies the
                                  residue substitution matrix that is used for
                                  sequence comparison.
   -gapopen            float      [10.0 for any sequence] This option
                                  specifies the gap insertion penalty. The gap
                                  insertion penalty is the score taken away
                                  when a gap is created. The best value
                                  depends on the choice of comparison matrix.
                                  The default value assumes you are using the
                                  EBLOSUM62 matrix for protein sequences, and
                                  the EDNAFULL matrix for nucleotide
                                  sequences. (Floating point number from 1.0
                                  to 100.0)
   -gapextend          float      [0.5 for any sequence] This option specifies
                                  the gap extension penalty. The gap
                                  extension, penalty is added to the standard
                                  gap penalty for each base or residue in the
                                  gap. This is how long gaps are penalized.
                                  Usually you will expect a few long gaps
                                  rather than many short gaps, so the gap
                                  extension penalty should be lower than the
                                  gap penalty. An exception is where one or
                                  both sequences are single reads with
                                  possible sequencing errors in which case you
                                  would expect many single base gaps. You can
                                  get this result by setting the gap open
                                  penalty to zero (or very low) and using the
                                  gap extension penalty to control gap
                                  scoring. (Floating point number from 0.0 to
                                  10.0)

   Advanced (Unprompted) qualifiers: (none)
   Associated qualifiers:

   "-logfile" associated qualifiers
   -odirectory         string     Output directory

   General qualifiers:
   -auto               boolean    Turn off prompts
   -stdout             boolean    Write first file to standard output
   -filter             boolean    Read first file from standard input, write
                                  first file to standard output
   -options            boolean    Prompt for standard and additional values
   -debug              boolean    Write debug output to program.dbg
   -verbose            boolean    Report some/full command line options
   -help               boolean    Report command line options and exit. More
                                  information on associated and general
                                  qualifiers can be found with -help -verbose
   -warning            boolean    Report warnings
   -error              boolean    Report errors
   -fatal              boolean    Report fatal errors
   -die                boolean    Report dying program messages
   -version            boolean    Report version number and exit

