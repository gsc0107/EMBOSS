application: sigscan [
  documentation: "Scans a signature against swissprot and
                  writes a signature hits file"
  groups: "Protein:3D Structure"
  gui: "yes"
  batch: "yes"
  cpu: "medium"
]

section: input
  information: "Input section"
  type: "page"
]

  infile: sigin  [
    parameter: "Y"
    information: "Name of signature file (input)"
    help: "A 'signature file' contains a sparse sequence signature.
           The files are generated by siggen."
  ]

  seqall: database  [
    required: "Y"
    information: "Name of swissprot sequence database to
                  search"
  ]

endsection: input

section: required
  information: "Required section"
  type: "page"
]

  integer: thresh  [
    required: "Y"
    information: "Minimum length (residues) of overlap required
                  for two hits with the same code to be counted as the same
                  hit."
    default: "20"
  ]

  matrixf: sub  [
    required: "Y"
    information: "Residue substitution matrix"
    default: "EBLOSUM62"
  ]

  float: gapo  [
    required: "Y"
    information: "Gap insertion penalty"
    minimum: "1."
    maximum: "100."
    default: "10"
    valid: "Floating point number from 1.0 to 100.0"
    expected: "10.0 for any sequence"
    help: "The gap insertion penalty is the score taken away when a
           gap is created. The best value depends on the choice of comparison
           matrix. The default value assumes you are using the EBLOSUM62
           matrix for protein sequences, and the EDNAMAT matrix for
           nucleotide sequences."
  ]

  float: gape  [
    required: "Y"
    information: "Gap extension penalty"
    minimum: "0.0"
    maximum: "10."
    default: "0.5"
    valid: "Floating point number from 0.0 to 10.0"
    expected: "0.5 for any sequence"
    help: "The gap extension, penalty is added to the standard gap
           penalty for each base or residue in the gap. This is how long gaps
           are penalized. Usually you will expect a few long gaps rather
           than many short gaps, so the gap extension penalty should be lower
           than the gap penalty. An exception is where one or both sequences
           are single reads with possible sequencing errors in which case
           you would expect many single base gaps. You can get this result by
           setting the gap open penalty to zero (or very low) and using the
           gap extension penalty to control gap scoring."
  ]

  list: nterm  [
    required: "Y"
    default: "1"
    minimum: "1"
    maximum: "3"
    values: "1: Align anywhere and allow only complete
             signature-sequence fit,2: Align anywhere and allow partial
             signature-sequence fit,3: Use empirical gaps only"
    delimiter: ","
    codedelimiter: ":"
    header: "N-terminal matching options"
    information: "Select number"
  ]

  integer: nhits  [
    required: "Y"
    information: "Max. number of hits to output"
    default: "100"
  ]

  integer: nfalse  [
    required: "Y"
    information: "Max. number of false hits to output"
    default: "50"
  ]

endsection: required

section: advanced
  information: "Advanced section"
  type: "page"
]

  infile: targetf  [
    information: "Name of validation file (input)"
    help: "A 'scop validation file' contains sequence relatives (hits)
           for each of a number of different scop families, superfamilies
           and folds. The file contains the collated results from psiblast
           searches of a sequence database for the indvidual scop families;
           hits of unambiguous family assignment are listed under their
           respective family, otherwise a hit is assigned as relatives to a
           scop superfamily or fold instead. The scop validation file is
           generated by seqnr and is in embl-like format."
    optional: "Y"
    nullok: "Y"
  ]

endsection: advanced

section: output
  information: "Output section"
  type: "page"
]

  outfile: hitsf  [
    parameter: "Y"
    information: "Name of signature hits file (output)"
    help: "A 'signature hits file' contains the results of a search of
           a discriminating element (one of protein signature, hidden Markov
           model, simple frequency matrix, Gribskov profile or Hennikoff
           profile) against a sequence database. The files are generated by
           sigscan and modelscan."
    default: "test.sighits"
  ]

  outfile: alignf  [
    parameter: "Y"
    information: "Name of signature alignments file (output)"
    help: "A 'signature alignment file' contains the alignments
           resulting from a search of a sparse protein signature against a
           sequence database. The files are generated by sigscan."
    default: "test.sigalign"
  ]

endsection: output
