application: ssematch [
  documentation: "Search a DCF file for secondary structure
                  matches."
  groups: "Utils:Database creation"
  gui: "yes"
  batch: "yes"
  cpu: "medium"
  embassy: "domainatrix"
]

section: input [
  information: "Input section"
  type: "page"
]

  infile: ssinfile [
    parameter: "Y"
    information: "Secondary structure file"
    help: "This option specifies the name of the file of secondary
           structure (input)."
    knowntype: "Secondary structure"
    relations: "EDAM: Free text file"                                      
  ]

  infile: dcfinfile [
    parameter: "Y"
    information: "Domain classification file"
    help: "This option specifies the name of the DCF file (domain
           classification file) (input). A 'domain classification file'
           contains classification and other data for domains from SCOP or
           CATH, in DCF format (EMBL-like). The files are generated by using
           SCOPPARSE and CATHPARSE. Domain sequence information can be added
           to the file by using DOMAINSEQS."
    knowntype: "Domain classification"
    relations: "EDAM: Free text file"                                      
  ]

  matrixf: datafile [
    additional: "Y"
    information: "Residue substitution matrix"
    help: "This option specifies the secondary structure substitution
           matrix."
    default: "SSSUB"
    relations: "EDAM: Float comparison matrix"                             
  ]

endsection: input

section: required [
  information: "Required section"
  type: "page"
]

  integer: maxhits [
    standard: "Y"
    information: "Number of top-scoring matches to report."
    help: "This option specifies the number of top-scoring matches to
           report."
    default: "5"
    relations: "EDAM: Generic integer"                                     
  ]

endsection: required

section: additional [
  information: "Additional section"
  type: "page"
]

  float: rgapopen [
    additional: "Y"
    information: "Gap insertion penalty for reside-based
                  alignment"
    minimum: "1."
    maximum: "100."
    default: "10"
    valid: "Floating point number from 1.0 to 100.0"
    expected: "10.0 for any sequence"
    help: "This options specifies the gap insertion penalty for
           reside-based alignment. The gap insertion penalty is the score
           taken away when a gap is created. The best value depends on the
           choice of comparison matrix. The default value assumes you are
           using the EBLOSUM62 matrix for protein sequences, and the EDNAFULL
           matrix for nucleotide sequences."
    relations: "EDAM: Generic float"                                       
  ]

  float: rgapextend [
    additional: "Y"
    information: "Gap extension penalty for residue-based
                  alignment"
    minimum: "0.0"
    maximum: "10."
    default: "0.5"
    valid: "Floating point number from 0.0 to 10.0"
    expected: "0.5 for any sequence"
    help: "This options specifies the gap extension penalty for
           residue-based alignment. The gap extension, penalty is added to
           the standard gap penalty for each base or residue in the gap. This
           is how long gaps are penalized. Usually you will expect a few
           long gaps rather than many short gaps, so the gap extension
           penalty should be lower than the gap penalty."
    relations: "EDAM: Generic float"                                       
  ]

  float: egapopen [
    additional: "Y"
    information: "Gap insertion penalty for secondary structure
                  element-based alignment."
    minimum: "1."
    maximum: "100."
    default: "10"
    valid: "Floating point number from 1.0 to 100.0"
    expected: "10.0 for any sequence"
    help: "This options specifies the gap insertion penalty for
           element-based alignment. The gap insertion penalty is the score
           taken away when a gap is created. The best value depends on the
           choice of comparison matrix. The default value assumes you are
           using the EBLOSUM62 matrix for protein sequences, and the EDNAFULL
           matrix for nucleotide sequences."
    relations: "EDAM: Generic float"                                       
  ]

  float: egapextend [
    additional: "Y"
    information: "Gap extension penalty for secondary structure
                  element-based alignment"
    minimum: "0.0"
    maximum: "10."
    default: "0.5"
    valid: "Floating point number from 0.0 to 10.0"
    expected: "0.5 for any sequence"
    help: "This options specifies the gap extension penalty for
           secondary structure element-based alignment. The gap extension,
           penalty is added to the standard gap penalty for each base or
           residue in the gap. This is how long gaps are penalized. Usually
           you will expect a few long gaps rather than many short gaps, so
           the gap extension penalty should be lower than the gap penalty."
    relations: "EDAM: Generic float"                                       
  ]

endsection: additional

section: output [
  information: "Output section"
  type: "page"
]

  outfile: outssfile [
    parameter: "Y"
    information: "Domain classification residue-based output
                  file"
    help: "This option specifies the name of the file containing
           top-scoring domains for residue-based alignment (output).A 'domain
           classification file' contains classification and other data for
           domains from SCOP or CATH, in DCF format (EMBL-like)."
    knowntype: "domain classification"
    relations:  "EDAM: EMBASSY domain classification record"           
  ]

  outfile: outsefile [
    parameter: "Y"
    information: "Domain classification structure-based output
                  file"
    help: "This option specifies the name of the file containing
           top-scoring domains for secondary structure element-based
           alignment (output). A 'domain classification file' contains
           classification and other data for domains from SCOP or CATH, in
           DCF format (EMBL-like)."
    knowntype: "domain classification"
    relations:  "EDAM: EMBASSY domain classification record"           
  ]

  outfile: logfile [
    standard: "Y"
    information: "Domainatrix log output file"
    help: "This option specifies the name of the ssematch log file
           (output)."
    default: "ssematch.log"
    knowntype: "domainatrix log"
    relations:  "EDAM: Domainatrix log file"                           
  ]

endsection: output
