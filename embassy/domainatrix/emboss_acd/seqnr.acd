application: seqnr [
  documentation: "Reads a scop families file and a scop
                  ambiguities file and writes (i) a non-redundant scop
                  families file and (ii) a scop validation file."
  groups: "Utils:Database creation"
  gui: "yes"
  batch: "yes"
  cpu: "medium"
]

section: input
  information: "Input section"
  type: "page"
]

  infile: inf  [
    parameter: "Y"
    information: "Name of the scop families file (input)"
    help: "A 'scop families file' contains sequence relatives (hits)
           for each of a number of different scop families found from
           psiblast searches of a sequence database. The file contains the
           collated search results for the indvidual scop families; only
           those hits of unambiguous family assignment are included. Hits of
           ambiguous family assignment are assigned as relatives to a scop
           superfamily or fold instead and are collated into a 'scop
           ambiguities file'. The scop families and ambiguities files are
           generated by seqsort and are in embl-like format."
  ]

  infile: vinf  [
    parameter: "Y"
    information: "Name of ambiguities file (input)"
    help: "A 'scop families file' contains sequence relatives (hits)
           for each of a number of different scop families found from
           psiblast searches of a sequence database. The file contains the
           collated search results for the indvidual scop families; only
           those hits of unambiguous family assignment are included. Hits of
           ambiguous family assignment are assigned as relatives to a scop
           superfamily or fold instead and are collated into a 'scop
           ambiguities file'. The scop families and ambiguities files are
           generated by seqsort and are in embl-like format."
  ]

  infile: scopin  [
    required: "Y"
    information: "Name of scop classification file (embl format
                  input)"
    help: "A 'scop classification file' contains classification and
           other data for domains from the scop database. The file is in
           embl-like format and is generated by scopparse. Domain sequence
           information can be added to the file by using scopseqs."
  ]

  string: alignpath  [
    required: "Y"
    information: "Location of scop alignment files (input)"
    help: "A 'scop family alignment file' contains a sequence
           alignment of domains belonging to the same scop family. The file
           is in embl-like format and is annotated with records describing
           the SCOP classification of the family. A scop family alignment
           file generatd by scopalign will contain a structure-based sequence
           alignment of domains of known structure only. Such alignments can
           be extended with sequence relatives (of unknown structure) to the
           family in question by using seqalign."
    default: "./"
  ]

  string: alignextn  [
    required: "Y"
    information: "Extension of scop alignment files"
    default: ".salign"
  ]

endsection: input

section: required
  information: "Required section"
  type: "page"
]

  integer: overlap  [
    required: "Y"
    information: "number of overlapping residues required to
                  define two hits as 'overlapping'"
    default: "10"
  ]

  float: thresh  [
    required: "Y"
    information: "The % sequence identity redundancy threshold"
    default: "95.0"
  ]

  list: mode  [
    required: "Y"
    default: "1"
    minimum: "1"
    maximum: "2"
    delimiter: ","
    codedelimiter: ":"
    values: "1: Validation file for signatures from structure-based
             sequence alignemnts (no scop families file), 2: Validation file
             for signatures from extended alignments (plus non-redundant scop
             families file)"
    help: "seqnr writes (i) a scop validation file, which contains all
           the hits from the scop families and ambiguities files, plus hits
           corresponding to sequences in the alignment. If run in mode 2 it
           will generate (ii) a scop families file, which is identical to the
           scop families input file, except that redundant domains are
           removed from each family, and sequences corresponding to domains
           from the alignment file are also excluded. in which non-redundant
           domains are removed from each family."
    header: "Mode of operation"
    information: "Select mode"
  ]

endsection: required

section: advanced
  information: "Advanced section"
  type: "page"
]

  matrixf: datafile  [
    information: "Residue substitution matrix"
    default: "EBLOSUM62"
  ]

  float: gapopen  [
    information: "Gap insertion penalty"
    minimum: "1."
    maximum: "100."
    default: "10"
    valid: "Floating point number from 1.0 to 100.0"
    expected: "10.0 for any sequence"
    help: "The gap insertion penalty is the score taken away when a
           gap is created. The best value depends on the choice of comparison
           matrix. The default value assumes you are using the EBLOSUM62
           matrix for protein sequences, and the EDNAFULL matrix for
           nucleotide sequences."
  ]

  float: gapextend  [
    information: "Gap extension penalty"
    minimum: "0.0"
    maximum: "10."
    default: "0.5"
    valid: "Floating point number from 0.0 to 10.0"
    expected: "0.5 for any sequence"
    help: "The gap extension, penalty is added to the standard gap
           penalty for each base or residue in the gap. This is how long gaps
           are penalized. Usually you will expect a few long gaps rather
           than many short gaps, so the gap extension penalty should be lower
           than the gap penalty. An exception is where one or both sequences
           are single reads with possible sequencing errors in which case
           you would expect many single base gaps. You can get this result by
           setting the gap open penalty to zero (or very low) and using the
           gap extension penalty to control gap scoring."
  ]

endsection: advanced

section: output
  information: "Output section"
  type: "page"
]

  outfile: outf  [
    required: "@($(mode)==2)"
    information: "Name of non-redundant scop families file
                  (output)"
    help: "A 'scop families file' contains sequence relatives (hits)
           for each of a number of different scop families found from
           psiblast searches of a sequence database. The file contains the
           collated search results for the indvidual scop families; only
           those hits of unambiguous family assignment are included. Hits of
           ambiguous family assignment are assigned as relatives to a scop
           superfamily or fold instead and are collated into a 'scop
           ambiguities file'. The scop families and ambiguities files are
           generated by seqsort and are in embl-like format."
    default: "famnr.hits"
  ]

  string: voutfname  [
    parameter: "Y"
    information: "Name of scop validation file (output)"
    help: "A 'scop validation file' contains sequence relatives (hits)
           for each of a number of different scop families, superfamilies
           and folds. The file contains the collated results from psiblast
           searches of a sequence database for the indvidual scop families;
           hits of unambiguous family assignment are listed under their
           respective family, otherwise a hit is assigned as relatives to a
           scop superfamily or fold instead. The scop validation file is
           generated by seqnr and is in embl-like format."
    default: "all.hits"
  ]

  outfile: logf  [
    required: "Y"
    information: "Name seqnr log file (output)"
    default: "seqnr.log"
    help: "The log file contains messages about any errors arising
           while seqnr ran."
  ]

endsection: output
