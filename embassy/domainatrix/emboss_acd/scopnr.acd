application: scopnr [
  documentation: "Removes redundant domains from a scop
                  classification file."
  groups: "Utils:Database creation"
  gui: "yes"
  batch: "yes"
  cpu: "medium"
]

section: input
  information: "Input section"
  type: "page"
]

  infile: scopin  [
    parameter: "Y"
    information: "Name of scop classification file (embl format
                  input)"
    help: "A 'scop classification file' contains classification and
           other data for domains from the scop database. The file is in
           embl-like format and is generated by scopparse. Domain sequence
           information can be added to the file by using scopseqs."
  ]

endsection: input

section: required
  information: "Required section"
  type: "page"
]

  list: mode  [
    required: "Y"
    default: "1"
    minimum: "1"
    maximum: "2"
    values: "1: Remove redundancy at a single threshold % sequence
             similarity,2: Remove redundancy outside a range of acceptable
             threshold % similarity"
    help: "All permutations of pair-wise sequence alignments are
           calculated for each scop family in turn using the EMBOSS
           implementation of the Needleman and Wunsch global alignment
           algorithm. Redundant sequences are removed in one of two modes as
           follows: (i) If a pair of proteins achieve greater than a
           threshold percentage sequence similarity (specified by the user)
           the shortest sequence is discarded. (ii) If a pair of proteins
           have a percentage sequence similarity that lies outside an
           acceptable range (specified by the user) the shortest sequence is
           discarded."
    delimiter: ","
    codedelimiter: ":"
    header: "Redundancy removal options"
    information: "Select number"
  ]

  float: thresh  [
    required: "@($(mode)==1)"
    information: "The % sequence identity redundancy threshold"
    default: "95.0"
  ]

  float: threshlow  [
    required: "@($(mode)==2)"
    information: "The % sequence identity redundancy threshold
                  (lower limit)"
    default: "30.0"
  ]

  float: threshup  [
    required: "@($(mode)==2)"
    information: "The % sequence identity redundancy threshold
                  (upper limit)"
    default: "90.0"
  ]

endsection: required

section: advanced
  information: "Advanced section"
  type: "page"
]

  matrixf: datafile  [
    optional: "Y"
    information: "Residue substitution matrix"
    default: "EBLOSUM62"
  ]

  float: gapopen  [
    optional: "Y"
    information: "Gap insertion penalty"
    minimum: "1."
    maximum: "100."
    default: "10"
    valid: "Floating point number from 1.0 to 100.0"
    expected: "10.0 for any sequence"
    help: "The gap insertion penalty is the score taken away when a
           gap is created. The best value depends on the choice of comparison
           matrix. The default value assumes you are using the EBLOSUM62
           matrix for protein sequences, and the EDNAFULL matrix for
           nucleotide sequences."
  ]

  float: gapextend  [
    optional: "Y"
    information: "Gap extension penalty"
    minimum: "0.0"
    maximum: "10."
    default: "0.5"
    valid: "Floating point number from 0.0 to 10.0"
    expected: "0.5 for any sequence"
    help: "The gap extension, penalty is added to the standard gap
           penalty for each base or residue in the gap. This is how long gaps
           are penalized. Usually you will expect a few long gaps rather
           than many short gaps, so the gap extension penalty should be lower
           than the gap penalty. An exception is where one or both sequences
           are single reads with possible sequencing errors in which case
           you would expect many single base gaps. You can get this result by
           setting the gap open penalty to zero (or very low) and using the
           gap extension penalty to control gap scoring."
  ]

endsection: advanced

section: output
  information: "Output section"
  type: "page"
]

  outfile: scopout  [
    parameter: "Y"
    information: "Name of non-redundant scop classification
                  file (embl format output)"
    default: "test.scop"
  ]

  outfile: errf  [
    required: "Y"
    information: "Name of log file for the build"
    help: "The log file contains messages about any errors arising
           while scopnr ran."
    default: "scopnr.log"
  ]

endsection: output
