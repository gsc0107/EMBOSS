application: profgen [
  documentation: "Generates various profiles for each
                  alignment in a directory."
  groups: "Protein:3D Structure"
  gui: "yes"
  batch: "yes"
  cpu: "medium"
]

section: input [
  information: "Input section"
  type: "page"
]



  string: infpath  [
    parameter: "Y"
    default: "./"
    information: "Location of scop alignment files (input)"
    help: "A 'scop family alignment file' contains a sequence
           alignment of domains belonging to the same scop family. The file
           is in embl-like format and is annotated with records describing
           the SCOP classification of the family. A scop family alignment
           file generatd by scopalign will contain a structure-based sequence
           alignment of domains of known structure only. Such alignments can
           be extended with sequence relatives (of unknown structure) to the
           family in question by using seqalign."
  ]


  string: infextn  [
    parameter: "Y"
    default: ".ealign"
    information: "Extension of scop alignment files"
  ]

endsection: input



section: required [
  information: "Required section"
  type: "page"
]


list: type  [
  standard: "Y"
  default: "F"
  minimum: "1"
  maximum: "1"
  values: "F:Frequency,G:Gribskov,H:Henikoff"
  delimiter: ","
  codedelimiter: ":"
  header: "Profile type"
  information: "Select type"
  button: "Y"
]

integer: threshold  [
  standard: "@($(type)==F)"
  default: "75"
  minimum: "1"
  maximum: "100"
  information: "Enter threshold reporting percentage"
]

matrixf: datafile  [
  standard: "@($(type)!=F)"
  information: "Residue substitution matrix"
  default: "@($(type) = G: Epprofile H: EBLOSUM62 F: EBLOSUM62)"
  expected: "'Epprofile' for Gribskov type, or EBLOSUM62"
]

float: open  [
  standard: "@($(type)==F)"
  information: "Gap insertion penalty"
  default: "3.0"
]

float: extension  [
  standard: "@($(type)==F)"
  information: "Gap extension penalty"
  default: "0.3"
]
endsection: required


section: output [
  information: "Output section"
  type: "page"
]

  string: smpfpath  [
    standard: "@($(type)==F)"
    default: "./"
    information: "Location of simple profile files (output)"
  ]

  string: smpfextn  [
    standard: "@($(type)==F)"
    default: ".freq"
    information: "Extention of simple profile files"
  ]

  string: gbpfpath  [
    standard: "@($(type)==G)"
    default: "./"
    information: "Location of Gribskov profile files (output)"
  ]

  string: gbpfextn  [
    standard: "@($(type)==G)"
    default: ".gribs"
    information: "Extension of Gribskov profile files"
  ]


  string: hnpfpath  [
    standard: "@($(type)==H)"
    default: "./"
    information: "Location of Henikoff profile files (output)"
  ]

  string: hnpfextn  [
    standard: "@($(type)==H)"
    default: ".henik"
    information: "Extension of Henikoff profile files"
  ]

endsection: output
