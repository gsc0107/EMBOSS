<table border cellspacing=0 cellpadding=3 bgcolor="#ccccff">
<tr bgcolor="#FFFFCC">
<th align="left">Qualifier</th>
<th align="left">Type</th>
<th align="left">Description</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Standard (Mandatory) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-dafinpath]<br>(Parameter 1)</td>
<td>dirlist</td>
<td>This option specifies the location of DAF files (domain alignment files) (input). A 'domain alignment file' contains a sequence alignment of domains belonging to the same SCOP or CATH family. The file is in clustal format annotated with domain family classification information. The files generated by using SCOPALIGN will contain a structure-based sequence alignment of domains of known structure only. Such alignments can be extended with sequence relatives (of unknown structure) by using SEQALIGN.</td>
<td>Directory with files</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-matrixfile</td>
<td>matrixf</td>
<td>This option specifies the residue substitution matrix. Epprofile for Gribskov profiles or EBLOSUM62 otherwise.</td>
<td>Comparison matrix file in EMBOSS data path</td>
<td>Epprofile for Gribskov type, or EBLOSUM62</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-mode</td>
<td>list</td>
<td>This option specifies the mode of LIBGEN operation. LIBGEN generates one of six types of profile for each alignment. Supported profiles include simple frequency matrices, Gribskov profiles, Hennikoff profiles, hidden Markov models (HMMER package), hidden Markov models (SAM-T2K package) and position-specific scoring matrices.</td>
<td><table><tr><td>1</td> <td><i>(Simple frequency matrix)</i></td></tr><tr><td>2</td> <td><i>(Gribskov profile)</i></td></tr><tr><td>3</td> <td><i>(Henikoff profile)</i></td></tr><tr><td>4</td> <td><i>(Hidden Markov model (HMMER))</i></td></tr><tr><td>5</td> <td><i>(Hidden Markov model (SAM-T2K))</i></td></tr><tr><td>6</td> <td><i>(Position-specific scoring matrix)</i></td></tr></table></td>
<td>1</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-threshold</td>
<td>integer</td>
<td>This option specifies the threshold reporting percentage. The threshold reporting percentage is used in the construction of the simple frequency matrix.</td>
<td>Integer from 1 to 100</td>
<td>75</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-gapopen</td>
<td>float</td>
<td>This option specifies the gap insertion penalty. The gap insertion penalty is the score taken away when a gap is created. The best value depends on the choice of comparison matrix. The default value assumes you are using the EBLOSUM62 matrix for protein sequences, and the EDNAFULL matrix for nucleotide sequences.</td>
<td>Any numeric value</td>
<td>3.0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-gapextend</td>
<td>float</td>
<td>This option specifies the gap extension penalty. The gap extension, penalty is added to the standard gap penalty for each base or residue in the gap. This is how long gaps are penalized. Usually you will expect a few long gaps rather than many short gaps, so the gap extension penalty should be lower than the gap penalty.</td>
<td>Any numeric value</td>
<td>0.3</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-outdir]<br>(Parameter 2)</td>
<td>outdir</td>
<td>This option specifies the location of discriminator files (output). The discriminator files contain one of the supported profiles, including simple frequency matrices, Gribskov profiles, Hennikoff profiles, hidden Markov models (HMMER package), hidden Markov models (SAM-T2K package) and position-specific scoring matrices.</td>
<td>Output directory</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Additional (Optional) qualifiers</th>
</tr>

<tr>
<td colspan=5>(none)</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Advanced (Unprompted) qualifiers</th>
</tr>

<tr>
<td colspan=5>(none)</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Associated qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-dafinpath" associated dirlist qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension1<br>-extension_dafinpath</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>daf</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-outdir" associated outdir qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension2<br>-extension_outdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>disc</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>General qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td> -auto</td>
<td>boolean</td>
<td>Turn off prompts</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -stdout</td>
<td>boolean</td>
<td>Write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -filter</td>
<td>boolean</td>
<td>Read first file from standard input, write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -options</td>
<td>boolean</td>
<td>Prompt for standard and additional values</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -debug</td>
<td>boolean</td>
<td>Write debug output to program.dbg</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -verbose</td>
<td>boolean</td>
<td>Report some/full command line options</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -help</td>
<td>boolean</td>
<td>Report command line options and exit. More information on associated and general qualifiers can be found with -help -verbose</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -warning</td>
<td>boolean</td>
<td>Report warnings</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -error</td>
<td>boolean</td>
<td>Report errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fatal</td>
<td>boolean</td>
<td>Report fatal errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -die</td>
<td>boolean</td>
<td>Report dying program messages</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -version</td>
<td>boolean</td>
<td>Report version number and exit</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

</table>
