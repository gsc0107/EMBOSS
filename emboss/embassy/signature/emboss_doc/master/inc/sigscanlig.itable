<table border cellspacing=0 cellpadding=3 bgcolor="#ccccff">
<tr bgcolor="#FFFFCC">
<th align="left">Qualifier</th>
<th align="left">Type</th>
<th align="left">Description</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Standard (Mandatory) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-siginfilesdir]<br>(Parameter 1)</td>
<td>dirlist</td>
<td>This option specifies the directory of signature files (input). A 'signature file' contains a sparse sequence signature suitable for use with the SIGSCAN and SIGSCANLIG programs. The files are generated by using SIGGEN and SIGGENLIG.</td>
<td>Directory with files</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-dbseqall]<br>(Parameter 2)</td>
<td>seqall</td>
<td>This option specifies the name of the database of query sequences.</td>
<td>Readable sequence(s)</td>
<td><b>Required</b></td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-sub</td>
<td>matrixf</td>
<td>This option specifies the scoring matrix to use, e.g. residue substitution matrix (1D signatures) or matrix of 3D:1D (environment:residue) scores (3D).</td>
<td>Comparison matrix file in EMBOSS data path</td>
<td>EBLOSUM62</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-mode</td>
<td>list</td>
<td>This option specifies the mode of scoring ligands. In 'Patch Score Mode' (mode 1) the score for a ligand is the mean of its patch scores. In 'Site Score Mode' the score for a ligand is the mean of its site scores. A site score is the mean of patch score for all patches for a given site.</td>
<td><table><tr><td>1</td> <td><i>(Patch score mode)</i></td></tr><tr><td>2</td> <td><i>(Site score mode)</i></td></tr></table></td>
<td>1</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-gapo</td>
<td>float</td>
<td>This option specifies the gap insertion penalty. The gap insertion penalty is the score taken away when a gap is created. The best value depends on the choice of comparison matrix. The default value assumes you are using the EBLOSUM62 matrix for protein sequences, and the EDNAMAT matrix for nucleotide sequences.</td>
<td>Floating point number from 1.0 to 100.0</td>
<td>10.0 for any sequence</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-gape</td>
<td>float</td>
<td>This option specifies the gap extension penalty. The gap extension penalty is added to the standard gap penalty for each base or residue in the gap. This is how long gaps are penalized. Usually you will expect a few long gaps rather than many short gaps, so the gap extension penalty should be lower than the gap penalty.</td>
<td>Floating point number from 0.0 to 10.0</td>
<td>0.5 for any sequence</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-nterm</td>
<td>list</td>
<td>This option specifies the N-terminal matching option. This determines how the first signature position is aligned to a sequence from the database.</td>
<td><table><tr><td>1</td> <td><i>(Align anywhere and allow only complete signature-sequence fit)</i></td></tr><tr><td>2</td> <td><i>(Align anywhere and allow partial signature-sequence fit)</i></td></tr><tr><td>3</td> <td><i>(Use empirical gaps only)</i></td></tr></table></td>
<td>1</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-hitsoutdir]<br>(Parameter 3)</td>
<td>outdir</td>
<td>This option specifies the directory of the LHF files (ligand hits files) (output). A 'ligand hits file' contains database hits (sequences) with ligand classification information, in the LHF format (FASTA-like). The hits are putative ligand-binding sequences and are found from a search of a sequence database, in this case, by using SIGSCANLIG.</td>
<td>Output directory</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-alignoutdir]<br>(Parameter 4)</td>
<td>outdir</td>
<td>This option specifies the name of the SAF (signature alignment file) (output).A 'signature alignment file' contains one or more signnature-sequence alignments. The file is in DAF format (CLUSTAL-like) and is annotated with bibliographic information, either the domain family classification (for SIGSCAN output) or ligand classification (for SIGSCANLIG output). The files generated by SIGSCAN will contain a signature-sequence alignment for a single signature against a library of one or more sequences. The files generated by using SIGSCANLIG will contain a signature-sequence alignment for a single query sequence against a library of one or more signatures.</td>
<td>Output directory</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-resultsoutdir]<br>(Parameter 5)</td>
<td>outdir</td>
<td>This option specifies the directory for the results files. A results file is generated for each query sequence and contains a list of hits (ligands), rank-ordered on the basis of score.</td>
<td>Output directory</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Additional (Optional) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>-nhits</td>
<td>integer</td>
<td>This option specifies the maximum number of hits to output.</td>
<td>Any integer value</td>
<td>100</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-domax</td>
<td>toggle</td>
<td>This option specifies whether to consider a max. number of top-scoring hits only for each ligand.</td>
<td>Toggle value Yes/No</td>
<td>No</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-maxhits</td>
<td>integer</td>
<td>This option specifies the maximum number of top-scoring hits to consider for each ligand.</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Advanced (Unprompted) qualifiers</th>
</tr>

<tr>
<td colspan=5>(none)</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Associated qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-siginfilesdir" associated dirlist qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension1<br>-extension_siginfilesdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>sig</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-dbseqall" associated seqall qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sbegin2<br>-sbegin_dbseqall</td>
<td>integer</td>
<td>Start of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -send2<br>-send_dbseqall</td>
<td>integer</td>
<td>End of each sequence to be used</td>
<td>Any integer value</td>
<td>0</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sreverse2<br>-sreverse_dbseqall</td>
<td>boolean</td>
<td>Reverse (if DNA)</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sask2<br>-sask_dbseqall</td>
<td>boolean</td>
<td>Ask for begin/end/reverse</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -snucleotide2<br>-snucleotide_dbseqall</td>
<td>boolean</td>
<td>Sequence is nucleotide</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sprotein2<br>-sprotein_dbseqall</td>
<td>boolean</td>
<td>Sequence is protein</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -slower2<br>-slower_dbseqall</td>
<td>boolean</td>
<td>Make lower case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -supper2<br>-supper_dbseqall</td>
<td>boolean</td>
<td>Make upper case</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sformat2<br>-sformat_dbseqall</td>
<td>string</td>
<td>Input sequence format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sdbname2<br>-sdbname_dbseqall</td>
<td>string</td>
<td>Database name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -sid2<br>-sid_dbseqall</td>
<td>string</td>
<td>Entryname</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -ufo2<br>-ufo_dbseqall</td>
<td>string</td>
<td>UFO features</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fformat2<br>-fformat_dbseqall</td>
<td>string</td>
<td>Features format</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fopenfile2<br>-fopenfile_dbseqall</td>
<td>string</td>
<td>Features file name</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-hitsoutdir" associated outdir qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension3<br>-extension_hitsoutdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>lhf</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-alignoutdir" associated outdir qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension4<br>-extension_alignoutdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>aln</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-resultsoutdir" associated outdir qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension5<br>-extension_resultsoutdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>results</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>General qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td> -auto</td>
<td>boolean</td>
<td>Turn off prompts</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -stdout</td>
<td>boolean</td>
<td>Write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -filter</td>
<td>boolean</td>
<td>Read first file from standard input, write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -options</td>
<td>boolean</td>
<td>Prompt for standard and additional values</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -debug</td>
<td>boolean</td>
<td>Write debug output to program.dbg</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -verbose</td>
<td>boolean</td>
<td>Report some/full command line options</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -help</td>
<td>boolean</td>
<td>Report command line options and exit. More information on associated and general qualifiers can be found with -help -verbose</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -warning</td>
<td>boolean</td>
<td>Report warnings</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -error</td>
<td>boolean</td>
<td>Report errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fatal</td>
<td>boolean</td>
<td>Report fatal errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -die</td>
<td>boolean</td>
<td>Report dying program messages</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -version</td>
<td>boolean</td>
<td>Report version number and exit</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

</table>
