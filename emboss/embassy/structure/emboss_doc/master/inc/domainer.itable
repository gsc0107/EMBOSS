<table border cellspacing=0 cellpadding=3 bgcolor="#ccccff">
<tr bgcolor="#FFFFCC">
<th align="left">Qualifier</th>
<th align="left">Type</th>
<th align="left">Description</th>
<th align="left">Allowed values</th>
<th align="left">Default</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Standard (Mandatory) qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-scopfile]<br>(Parameter 1)</td>
<td>infile</td>
<td>This option specifies the DCF file (domain classification file) (input). A 'domain classification file' contains classification and other data for domains from SCOP or CATH, in DCF format (EMBL-like). The files are generated by using SCOPPARSE and CATHPARSE. Domain sequence information can be added to the file by using DOMAINSEQS.</td>
<td>Input file</td>
<td><b>Required</b></td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-ccfpdir]<br>(Parameter 2)</td>
<td>directory</td>
<td>This option specifies the location of protein CCF file (clean coordinate files) (input). A 'clean cordinate file' contains protein coordinate and derived data for a single PDB file ('protein clean coordinate file') or a single domain from SCOP or CATH ('domain clean coordinate file'), in CCF format (EMBL-like). The files, generated by using PDBPARSE (PDB files) or DOMAINER (domains), contain 'cleaned-up' data that is self-consistent and error-corrected. Records for residue solvent accessibility and secondary structure are added to the file by using PDBPLUS. default: "./</td>
<td>Directory</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-ccfoutdir]<br>(Parameter 3)</td>
<td>outdir</td>
<td>This option specifies the location of domain CCF files (clean coordinate files) (output). A 'domain coordinate file' contains coordinate and other data for a single scop domain. The files are generated by DOMAINER and are in embl-like and pdb formats.</td>
<td>Output directory</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>[-pdboutdir]<br>(Parameter 4)</td>
<td>outdir</td>
<td>This option specifies the location of domain PDB files (output). A 'domain coordinate file' contains coordinate and other data for a single scop domain. The files are generated by DOMAINER and are in embl-like and pdb formats.</td>
<td>Output directory</td>
<td>./</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-mode</td>
<td>list</td>
<td>This option specifies the operational mode of DOMAINER. This determines which sort of residue number is written to the PDB file.</td>
<td><table><tr><td>1</td> <td><i>(Use original PDB residue number)</i></td></tr><tr><td>2</td> <td><i>(Use corrected residue number (index into SEQRES sequence))</i></td></tr></table></td>
<td>1</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-cpdblogfile</td>
<td>outfile</td>
<td>This option specifies the log file, which contains messages about any errors arising while DOMAINER generated CCF format files</td>
<td>Output file</td>
<td>domainer_embl.log</td>
</tr>

<tr bgcolor="#FFFFCC">
<td>-pdblogfile</td>
<td>outfile</td>
<td>This option specifies the the log file, which contains messages about any errors arising while DOMAINER generated PDB format files</td>
<td>Output file</td>
<td>domainer_pdb.log</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Additional (Optional) qualifiers</th>
</tr>

<tr>
<td colspan=5>(none)</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Advanced (Unprompted) qualifiers</th>
</tr>

<tr>
<td colspan=5>(none)</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>Associated qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-ccfpdir" associated directory qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension2<br>-extension_ccfpdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>ccf</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-ccfoutdir" associated outdir qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension3<br>-extension_ccfoutdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>ccf</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-pdboutdir" associated outdir qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -extension4<br>-extension_pdboutdir</td>
<td>string</td>
<td>Default file extension</td>
<td>Any string</td>
<td>ent</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-cpdblogfile" associated outfile qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -odirectory</td>
<td>string</td>
<td>Output directory</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>"-pdblogfile" associated outfile qualifiers
</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -odirectory</td>
<td>string</td>
<td>Output directory</td>
<td>Any string</td>
<td>&nbsp;</td>
</tr>

<tr bgcolor="#FFFFCC">
<th align="left" colspan=5>General qualifiers</th>
</tr>

<tr bgcolor="#FFFFCC">
<td> -auto</td>
<td>boolean</td>
<td>Turn off prompts</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -stdout</td>
<td>boolean</td>
<td>Write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -filter</td>
<td>boolean</td>
<td>Read first file from standard input, write first file to standard output</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -options</td>
<td>boolean</td>
<td>Prompt for standard and additional values</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -debug</td>
<td>boolean</td>
<td>Write debug output to program.dbg</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -verbose</td>
<td>boolean</td>
<td>Report some/full command line options</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -help</td>
<td>boolean</td>
<td>Report command line options and exit. More information on associated and general qualifiers can be found with -help -verbose</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -warning</td>
<td>boolean</td>
<td>Report warnings</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -error</td>
<td>boolean</td>
<td>Report errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -fatal</td>
<td>boolean</td>
<td>Report fatal errors</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -die</td>
<td>boolean</td>
<td>Report dying program messages</td>
<td>Boolean value Yes/No</td>
<td>Y</td>
</tr>

<tr bgcolor="#FFFFCC">
<td> -version</td>
<td>boolean</td>
<td>Report version number and exit</td>
<td>Boolean value Yes/No</td>
<td>N</td>
</tr>

</table>
